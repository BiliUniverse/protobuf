// @generated by protobuf-ts 2.9.6 with parameter generate_dependencies,long_type_string,output_javascript
// @generated from protobuf file "bilibili/main/community/reply/v1/reply.proto" (package "bilibili.main.community.reply.v1", syntax proto3)
// tslint:disable
import { Reply } from "./reply";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
/**
 * 评论区
 *
 * @generated from protobuf service bilibili.main.community.reply.v1.Reply
 */
export class ReplyClient {
    constructor(_transport) {
        this._transport = _transport;
        this.typeName = Reply.typeName;
        this.methods = Reply.methods;
        this.options = Reply.options;
    }
    /**
     * 主评论列表接口
     *
     * @generated from protobuf rpc: MainList(bilibili.main.community.reply.v1.MainListReq) returns (bilibili.main.community.reply.v1.MainListReply);
     */
    mainList(input, options) {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * 二级评论明细接口
     *
     * @generated from protobuf rpc: DetailList(bilibili.main.community.reply.v1.DetailListReq) returns (bilibili.main.community.reply.v1.DetailListReply);
     */
    detailList(input, options) {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * 对话评论树接口
     *
     * @generated from protobuf rpc: DialogList(bilibili.main.community.reply.v1.DialogListReq) returns (bilibili.main.community.reply.v1.DialogListReply);
     */
    dialogList(input, options) {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * 评论预览接口
     *
     * @generated from protobuf rpc: PreviewList(bilibili.main.community.reply.v1.PreviewListReq) returns (bilibili.main.community.reply.v1.PreviewListReply);
     */
    previewList(input, options) {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * 评论搜索item前置发布接口
     *
     * @generated from protobuf rpc: SearchItemPreHook(bilibili.main.community.reply.v1.SearchItemPreHookReq) returns (bilibili.main.community.reply.v1.SearchItemPreHookReply);
     */
    searchItemPreHook(input, options) {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * 评论搜索插入项目接口
     *
     * @generated from protobuf rpc: SearchItem(bilibili.main.community.reply.v1.SearchItemReq) returns (bilibili.main.community.reply.v1.SearchItemReply);
     */
    searchItem(input, options) {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * 评论at用户搜索接口
     *
     * @generated from protobuf rpc: AtSearch(bilibili.main.community.reply.v1.AtSearchReq) returns (bilibili.main.community.reply.v1.AtSearchReply);
     */
    atSearch(input, options) {
        const method = this.methods[6], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * 查询单条评论接口
     *
     * @generated from protobuf rpc: ReplyInfo(bilibili.main.community.reply.v1.ReplyInfoReq) returns (bilibili.main.community.reply.v1.ReplyInfoReply);
     */
    replyInfo(input, options) {
        const method = this.methods[7], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * 用户回调上报接口
     *
     * @generated from protobuf rpc: UserCallback(bilibili.main.community.reply.v1.UserCallbackReq) returns (bilibili.main.community.reply.v1.UserCallbackReply);
     */
    userCallback(input, options) {
        const method = this.methods[8], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * 评论分享材料接口
     *
     * @generated from protobuf rpc: ShareRepliesInfo(bilibili.main.community.reply.v1.ShareRepliesInfoReq) returns (bilibili.main.community.reply.v1.ShareRepliesInfoResp);
     */
    shareRepliesInfo(input, options) {
        const method = this.methods[9], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * 评论表情推荐列表接口
     *
     * @generated from protobuf rpc: SuggestEmotes(bilibili.main.community.reply.v1.SuggestEmotesReq) returns (bilibili.main.community.reply.v1.SuggestEmotesResp);
     */
    suggestEmotes(input, options) {
        const method = this.methods[10], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
}
