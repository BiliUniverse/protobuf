// @generated by protobuf-ts 2.9.6 with parameter generate_dependencies,long_type_number,output_javascript
// @generated from protobuf file "bilibili/app/view/v1/view.proto" (package "bilibili.app.view.v1", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import type { CacheViewReply } from "./view";
import type { CacheViewReq } from "./view";
import type { ViewReply } from "./view";
import type { ViewReq } from "./view";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service bilibili.app.view.v1.View
 */
export interface IViewClient {
    /**
     * 视频页详情页
     *
     * @generated from protobuf rpc: View(bilibili.app.view.v1.ViewReq) returns (bilibili.app.view.v1.ViewReply);
     */
    view(input: ViewReq, options?: RpcOptions): UnaryCall<ViewReq, ViewReply>;
    /**
     *
     * rpc ViewTag(ViewTagReq) returns (ViewTagReply);
     *
     * rpc ViewMaterial(ViewMaterialReq) returns (ViewMaterialReply);
     * 视频播放过程中的数据
     * rpc ViewProgress (ViewProgressReq) returns (ViewProgressReply);
     * 短视频下载
     * rpc ShortFormVideoDownload (ShortFormVideoDownloadReq) returns (ShortFormVideoDownloadReply);
     * 点击播放器卡片事件
     * rpc ClickPlayerCard (ClickPlayerCardReq) returns (NoReply);
     * 点击大型活动页预约
     * rpc ClickActivitySeason (ClickActivitySeasonReq) returns (NoReply);
     * 合集详情页
     * rpc Season (SeasonReq) returns (SeasonReply);
     * 播放器卡片曝光
     * rpc ExposePlayerCard (ExposePlayerCardReq) returns (NoReply);
     * 点击签订契约
     * rpc AddContract (AddContractReq) returns (NoReply);
     * 资源包
     * rpc ChronosPkg(ChronosPkgReq) returns (Chronos);
     *
     *
     *
     * rpc ContinuousPlay(ContinuousPlayReq) returns (ContinuousPlayReply);
     * 播放页推荐IFS
     * rpc RelatesFeed(RelatesFeedReq) returns (RelatesFeedReply);
     *
     * rpc PremiereArchive(PremiereArchiveReq) returns (PremiereArchiveReply);
     *
     * rpc Reserve(ReserveReq) returns (ReserveReply);
     *
     * rpc PlayerRelates(PlayerRelatesReq) returns (PlayerRelatesReply);
     *
     * rpc SeasonActivityRecord(SeasonActivityRecordReq) returns (SeasonActivityRecordReply);
     *
     * rpc SeasonWidgetExpose(SeasonWidgetExposeReq) returns (SeasonWidgetExposeReply);
     *
     * rpc GetArcsPlayer(GetArcsPlayerReq) returns (GetArcsPlayerReply);
     *
     * rpc GetUser(GetUserReq) returns (GetUserReply);
     *
     * @generated from protobuf rpc: CacheView(bilibili.app.view.v1.CacheViewReq) returns (bilibili.app.view.v1.CacheViewReply);
     */
    cacheView(input: CacheViewReq, options?: RpcOptions): UnaryCall<CacheViewReq, CacheViewReply>;
}
/**
 * @generated from protobuf service bilibili.app.view.v1.View
 */
export declare class ViewClient implements IViewClient, ServiceInfo {
    private readonly _transport;
    typeName: any;
    methods: any;
    options: any;
    constructor(_transport: RpcTransport);
    /**
     * 视频页详情页
     *
     * @generated from protobuf rpc: View(bilibili.app.view.v1.ViewReq) returns (bilibili.app.view.v1.ViewReply);
     */
    view(input: ViewReq, options?: RpcOptions): UnaryCall<ViewReq, ViewReply>;
    /**
     *
     * rpc ViewTag(ViewTagReq) returns (ViewTagReply);
     *
     * rpc ViewMaterial(ViewMaterialReq) returns (ViewMaterialReply);
     * 视频播放过程中的数据
     * rpc ViewProgress (ViewProgressReq) returns (ViewProgressReply);
     * 短视频下载
     * rpc ShortFormVideoDownload (ShortFormVideoDownloadReq) returns (ShortFormVideoDownloadReply);
     * 点击播放器卡片事件
     * rpc ClickPlayerCard (ClickPlayerCardReq) returns (NoReply);
     * 点击大型活动页预约
     * rpc ClickActivitySeason (ClickActivitySeasonReq) returns (NoReply);
     * 合集详情页
     * rpc Season (SeasonReq) returns (SeasonReply);
     * 播放器卡片曝光
     * rpc ExposePlayerCard (ExposePlayerCardReq) returns (NoReply);
     * 点击签订契约
     * rpc AddContract (AddContractReq) returns (NoReply);
     * 资源包
     * rpc ChronosPkg(ChronosPkgReq) returns (Chronos);
     *
     *
     *
     * rpc ContinuousPlay(ContinuousPlayReq) returns (ContinuousPlayReply);
     * 播放页推荐IFS
     * rpc RelatesFeed(RelatesFeedReq) returns (RelatesFeedReply);
     *
     * rpc PremiereArchive(PremiereArchiveReq) returns (PremiereArchiveReply);
     *
     * rpc Reserve(ReserveReq) returns (ReserveReply);
     *
     * rpc PlayerRelates(PlayerRelatesReq) returns (PlayerRelatesReply);
     *
     * rpc SeasonActivityRecord(SeasonActivityRecordReq) returns (SeasonActivityRecordReply);
     *
     * rpc SeasonWidgetExpose(SeasonWidgetExposeReq) returns (SeasonWidgetExposeReply);
     *
     * rpc GetArcsPlayer(GetArcsPlayerReq) returns (GetArcsPlayerReply);
     *
     * rpc GetUser(GetUserReq) returns (GetUserReply);
     *
     * @generated from protobuf rpc: CacheView(bilibili.app.view.v1.CacheViewReq) returns (bilibili.app.view.v1.CacheViewReply);
     */
    cacheView(input: CacheViewReq, options?: RpcOptions): UnaryCall<CacheViewReq, CacheViewReply>;
}
