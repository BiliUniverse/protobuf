// @generated by protobuf-ts 2.9.4 with parameter generate_dependencies,long_type_number,output_javascript
// @generated from protobuf file "bilibili/app/viewunite/pgcanymodel.proto" (package "bilibili.app.viewunite.pgcanymodel", syntax proto3)
// tslint:disable
import { WireType } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { StatInfo } from "./common";
import { ViewEpisode } from "./common";
import { BadgeInfo } from "./common";
// @generated message type with reflection information, may provide speed optimized methods
class Earphone$Type extends MessageType {
    constructor() {
        super("bilibili.app.viewunite.pgcanymodel.Earphone", [
            { no: 1, name: "product_model", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "like_toast_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "switch_toast_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "like_toast_voice", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.productModel = "";
        message.likeToastText = "";
        message.switchToastText = "";
        message.likeToastVoice = "";
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string product_model */ 1:
                    message.productModel = reader.string();
                    break;
                case /* string like_toast_text */ 2:
                    message.likeToastText = reader.string();
                    break;
                case /* string switch_toast_text */ 3:
                    message.switchToastText = reader.string();
                    break;
                case /* string like_toast_voice */ 4:
                    message.likeToastVoice = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string product_model = 1; */
        if (message.productModel !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.productModel);
        /* string like_toast_text = 2; */
        if (message.likeToastText !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.likeToastText);
        /* string switch_toast_text = 3; */
        if (message.switchToastText !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.switchToastText);
        /* string like_toast_voice = 4; */
        if (message.likeToastVoice !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.likeToastVoice);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.viewunite.pgcanymodel.Earphone
 */
export const Earphone = new Earphone$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EarphoneConf$Type extends MessageType {
    constructor() {
        super("bilibili.app.viewunite.pgcanymodel.EarphoneConf", [
            { no: 1, name: "sp_phones", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Earphone }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.spPhones = [];
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.app.viewunite.pgcanymodel.Earphone sp_phones */ 1:
                    message.spPhones.push(Earphone.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.app.viewunite.pgcanymodel.Earphone sp_phones = 1; */
        for (let i = 0; i < message.spPhones.length; i++)
            Earphone.internalBinaryWrite(message.spPhones[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.viewunite.pgcanymodel.EarphoneConf
 */
export const EarphoneConf = new EarphoneConf$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MultiViewInfo$Type extends MessageType {
    constructor() {
        super("bilibili.app.viewunite.pgcanymodel.MultiViewInfo", [
            { no: 1, name: "is_multi_view_season", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "changing_dance", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.isMultiViewSeason = false;
        message.changingDance = "";
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bool is_multi_view_season */ 1:
                    message.isMultiViewSeason = reader.bool();
                    break;
                case /* string changing_dance */ 2:
                    message.changingDance = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bool is_multi_view_season = 1; */
        if (message.isMultiViewSeason !== false)
            writer.tag(1, WireType.Varint).bool(message.isMultiViewSeason);
        /* string changing_dance = 2; */
        if (message.changingDance !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.changingDance);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.viewunite.pgcanymodel.MultiViewInfo
 */
export const MultiViewInfo = new MultiViewInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OgvData$Type extends MessageType {
    constructor() {
        super("bilibili.app.viewunite.pgcanymodel.OgvData", [
            { no: 1, name: "media_id", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "season_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 3, name: "season_type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "show_season_type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "rights", kind: "message", T: () => Rights },
            { no: 7, name: "aid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 9, name: "mode", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 14, name: "total_ep", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 17, name: "status", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 20, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 21, name: "square_cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 22, name: "share_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 23, name: "short_link", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 24, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 25, name: "horizontal_cover169", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 26, name: "horizontal_cover1610", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 27, name: "has_can_play_ep", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.mediaId = 0;
        message.seasonId = 0;
        message.seasonType = 0;
        message.showSeasonType = 0;
        message.aid = 0;
        message.mode = 0;
        message.totalEp = 0;
        message.status = 0;
        message.cover = "";
        message.squareCover = "";
        message.shareUrl = "";
        message.shortLink = "";
        message.title = "";
        message.horizontalCover169 = "";
        message.horizontalCover1610 = "";
        message.hasCanPlayEp = 0;
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 media_id */ 1:
                    message.mediaId = reader.int32();
                    break;
                case /* int64 season_id */ 2:
                    message.seasonId = reader.int64().toNumber();
                    break;
                case /* int32 season_type */ 3:
                    message.seasonType = reader.int32();
                    break;
                case /* int32 show_season_type */ 4:
                    message.showSeasonType = reader.int32();
                    break;
                case /* bilibili.app.viewunite.pgcanymodel.Rights rights */ 5:
                    message.rights = Rights.internalBinaryRead(reader, reader.uint32(), options, message.rights);
                    break;
                case /* int64 aid */ 7:
                    message.aid = reader.int64().toNumber();
                    break;
                case /* int32 mode */ 9:
                    message.mode = reader.int32();
                    break;
                case /* int32 total_ep */ 14:
                    message.totalEp = reader.int32();
                    break;
                case /* int32 status */ 17:
                    message.status = reader.int32();
                    break;
                case /* string cover */ 20:
                    message.cover = reader.string();
                    break;
                case /* string square_cover */ 21:
                    message.squareCover = reader.string();
                    break;
                case /* string share_url */ 22:
                    message.shareUrl = reader.string();
                    break;
                case /* string short_link */ 23:
                    message.shortLink = reader.string();
                    break;
                case /* string title */ 24:
                    message.title = reader.string();
                    break;
                case /* string horizontal_cover169 */ 25:
                    message.horizontalCover169 = reader.string();
                    break;
                case /* string horizontal_cover1610 */ 26:
                    message.horizontalCover1610 = reader.string();
                    break;
                case /* int32 has_can_play_ep */ 27:
                    message.hasCanPlayEp = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 media_id = 1; */
        if (message.mediaId !== 0)
            writer.tag(1, WireType.Varint).int32(message.mediaId);
        /* int64 season_id = 2; */
        if (message.seasonId !== 0)
            writer.tag(2, WireType.Varint).int64(message.seasonId);
        /* int32 season_type = 3; */
        if (message.seasonType !== 0)
            writer.tag(3, WireType.Varint).int32(message.seasonType);
        /* int32 show_season_type = 4; */
        if (message.showSeasonType !== 0)
            writer.tag(4, WireType.Varint).int32(message.showSeasonType);
        /* bilibili.app.viewunite.pgcanymodel.Rights rights = 5; */
        if (message.rights)
            Rights.internalBinaryWrite(message.rights, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* int64 aid = 7; */
        if (message.aid !== 0)
            writer.tag(7, WireType.Varint).int64(message.aid);
        /* int32 mode = 9; */
        if (message.mode !== 0)
            writer.tag(9, WireType.Varint).int32(message.mode);
        /* int32 total_ep = 14; */
        if (message.totalEp !== 0)
            writer.tag(14, WireType.Varint).int32(message.totalEp);
        /* int32 status = 17; */
        if (message.status !== 0)
            writer.tag(17, WireType.Varint).int32(message.status);
        /* string cover = 20; */
        if (message.cover !== "")
            writer.tag(20, WireType.LengthDelimited).string(message.cover);
        /* string square_cover = 21; */
        if (message.squareCover !== "")
            writer.tag(21, WireType.LengthDelimited).string(message.squareCover);
        /* string share_url = 22; */
        if (message.shareUrl !== "")
            writer.tag(22, WireType.LengthDelimited).string(message.shareUrl);
        /* string short_link = 23; */
        if (message.shortLink !== "")
            writer.tag(23, WireType.LengthDelimited).string(message.shortLink);
        /* string title = 24; */
        if (message.title !== "")
            writer.tag(24, WireType.LengthDelimited).string(message.title);
        /* string horizontal_cover169 = 25; */
        if (message.horizontalCover169 !== "")
            writer.tag(25, WireType.LengthDelimited).string(message.horizontalCover169);
        /* string horizontal_cover1610 = 26; */
        if (message.horizontalCover1610 !== "")
            writer.tag(26, WireType.LengthDelimited).string(message.horizontalCover1610);
        /* int32 has_can_play_ep = 27; */
        if (message.hasCanPlayEp !== 0)
            writer.tag(27, WireType.Varint).int32(message.hasCanPlayEp);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.viewunite.pgcanymodel.OgvData
 */
export const OgvData = new OgvData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OgvSwitch$Type extends MessageType {
    constructor() {
        super("bilibili.app.viewunite.pgcanymodel.OgvSwitch", [
            { no: 1, name: "reduce_short_title_spacing", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "merge_position_section_for_cinema", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "merge_preview_section", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "enable_show_vt_info", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.reduceShortTitleSpacing = 0;
        message.mergePositionSectionForCinema = 0;
        message.mergePreviewSection = 0;
        message.enableShowVtInfo = 0;
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 reduce_short_title_spacing */ 1:
                    message.reduceShortTitleSpacing = reader.int32();
                    break;
                case /* int32 merge_position_section_for_cinema */ 2:
                    message.mergePositionSectionForCinema = reader.int32();
                    break;
                case /* int32 merge_preview_section */ 3:
                    message.mergePreviewSection = reader.int32();
                    break;
                case /* int32 enable_show_vt_info */ 4:
                    message.enableShowVtInfo = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 reduce_short_title_spacing = 1; */
        if (message.reduceShortTitleSpacing !== 0)
            writer.tag(1, WireType.Varint).int32(message.reduceShortTitleSpacing);
        /* int32 merge_position_section_for_cinema = 2; */
        if (message.mergePositionSectionForCinema !== 0)
            writer.tag(2, WireType.Varint).int32(message.mergePositionSectionForCinema);
        /* int32 merge_preview_section = 3; */
        if (message.mergePreviewSection !== 0)
            writer.tag(3, WireType.Varint).int32(message.mergePreviewSection);
        /* int32 enable_show_vt_info = 4; */
        if (message.enableShowVtInfo !== 0)
            writer.tag(4, WireType.Varint).int32(message.enableShowVtInfo);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.viewunite.pgcanymodel.OgvSwitch
 */
export const OgvSwitch = new OgvSwitch$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PlayFloatLayerActivity$Type extends MessageType {
    constructor() {
        super("bilibili.app.viewunite.pgcanymodel.PlayFloatLayerActivity", [
            { no: 1, name: "id", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "ad_badge_type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "link", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "pic_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "pic_anima_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "badge", kind: "message", T: () => BadgeInfo },
            { no: 9, name: "show_rate_time", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.id = 0;
        message.title = "";
        message.type = 0;
        message.adBadgeType = 0;
        message.link = "";
        message.picUrl = "";
        message.picAnimaUrl = "";
        message.showRateTime = 0;
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 id */ 1:
                    message.id = reader.int32();
                    break;
                case /* string title */ 2:
                    message.title = reader.string();
                    break;
                case /* int32 type */ 3:
                    message.type = reader.int32();
                    break;
                case /* int32 ad_badge_type */ 4:
                    message.adBadgeType = reader.int32();
                    break;
                case /* string link */ 5:
                    message.link = reader.string();
                    break;
                case /* string pic_url */ 6:
                    message.picUrl = reader.string();
                    break;
                case /* string pic_anima_url */ 7:
                    message.picAnimaUrl = reader.string();
                    break;
                case /* bilibili.app.viewunite.common.BadgeInfo badge */ 8:
                    message.badge = BadgeInfo.internalBinaryRead(reader, reader.uint32(), options, message.badge);
                    break;
                case /* int64 show_rate_time */ 9:
                    message.showRateTime = reader.int64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 id = 1; */
        if (message.id !== 0)
            writer.tag(1, WireType.Varint).int32(message.id);
        /* string title = 2; */
        if (message.title !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.title);
        /* int32 type = 3; */
        if (message.type !== 0)
            writer.tag(3, WireType.Varint).int32(message.type);
        /* int32 ad_badge_type = 4; */
        if (message.adBadgeType !== 0)
            writer.tag(4, WireType.Varint).int32(message.adBadgeType);
        /* string link = 5; */
        if (message.link !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.link);
        /* string pic_url = 6; */
        if (message.picUrl !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.picUrl);
        /* string pic_anima_url = 7; */
        if (message.picAnimaUrl !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.picAnimaUrl);
        /* bilibili.app.viewunite.common.BadgeInfo badge = 8; */
        if (message.badge)
            BadgeInfo.internalBinaryWrite(message.badge, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* int64 show_rate_time = 9; */
        if (message.showRateTime !== 0)
            writer.tag(9, WireType.Varint).int64(message.showRateTime);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.viewunite.pgcanymodel.PlayFloatLayerActivity
 */
export const PlayFloatLayerActivity = new PlayFloatLayerActivity$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PlayStrategy$Type extends MessageType {
    constructor() {
        super("bilibili.app.viewunite.pgcanymodel.PlayStrategy", [
            { no: 1, name: "strategies", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "recommend_show_strategy", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "auto_play_toast", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.strategies = [];
        message.recommendShowStrategy = 0;
        message.autoPlayToast = "";
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated string strategies */ 1:
                    message.strategies.push(reader.string());
                    break;
                case /* int32 recommend_show_strategy */ 2:
                    message.recommendShowStrategy = reader.int32();
                    break;
                case /* string auto_play_toast */ 3:
                    message.autoPlayToast = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated string strategies = 1; */
        for (let i = 0; i < message.strategies.length; i++)
            writer.tag(1, WireType.LengthDelimited).string(message.strategies[i]);
        /* int32 recommend_show_strategy = 2; */
        if (message.recommendShowStrategy !== 0)
            writer.tag(2, WireType.Varint).int32(message.recommendShowStrategy);
        /* string auto_play_toast = 3; */
        if (message.autoPlayToast !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.autoPlayToast);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.viewunite.pgcanymodel.PlayStrategy
 */
export const PlayStrategy = new PlayStrategy$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Publish$Type extends MessageType {
    constructor() {
        super("bilibili.app.viewunite.pgcanymodel.Publish", [
            { no: 1, name: "pub_time", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "pub_time_show", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "is_started", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "is_finish", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "weekday", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "release_date_show", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "time_length_show", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "unknow_pub_date", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 9, name: "update_info_desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.pubTime = "";
        message.pubTimeShow = "";
        message.isStarted = 0;
        message.isFinish = 0;
        message.weekday = 0;
        message.releaseDateShow = "";
        message.timeLengthShow = "";
        message.unknowPubDate = 0;
        message.updateInfoDesc = "";
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string pub_time */ 1:
                    message.pubTime = reader.string();
                    break;
                case /* string pub_time_show */ 2:
                    message.pubTimeShow = reader.string();
                    break;
                case /* int32 is_started */ 3:
                    message.isStarted = reader.int32();
                    break;
                case /* int32 is_finish */ 4:
                    message.isFinish = reader.int32();
                    break;
                case /* int32 weekday */ 5:
                    message.weekday = reader.int32();
                    break;
                case /* string release_date_show */ 6:
                    message.releaseDateShow = reader.string();
                    break;
                case /* string time_length_show */ 7:
                    message.timeLengthShow = reader.string();
                    break;
                case /* int32 unknow_pub_date */ 8:
                    message.unknowPubDate = reader.int32();
                    break;
                case /* string update_info_desc */ 9:
                    message.updateInfoDesc = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string pub_time = 1; */
        if (message.pubTime !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.pubTime);
        /* string pub_time_show = 2; */
        if (message.pubTimeShow !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.pubTimeShow);
        /* int32 is_started = 3; */
        if (message.isStarted !== 0)
            writer.tag(3, WireType.Varint).int32(message.isStarted);
        /* int32 is_finish = 4; */
        if (message.isFinish !== 0)
            writer.tag(4, WireType.Varint).int32(message.isFinish);
        /* int32 weekday = 5; */
        if (message.weekday !== 0)
            writer.tag(5, WireType.Varint).int32(message.weekday);
        /* string release_date_show = 6; */
        if (message.releaseDateShow !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.releaseDateShow);
        /* string time_length_show = 7; */
        if (message.timeLengthShow !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.timeLengthShow);
        /* int32 unknow_pub_date = 8; */
        if (message.unknowPubDate !== 0)
            writer.tag(8, WireType.Varint).int32(message.unknowPubDate);
        /* string update_info_desc = 9; */
        if (message.updateInfoDesc !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.updateInfoDesc);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.viewunite.pgcanymodel.Publish
 */
export const Publish = new Publish$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Reserve$Type extends MessageType {
    constructor() {
        super("bilibili.app.viewunite.pgcanymodel.Reserve", [
            { no: 1, name: "episodes", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ViewEpisode },
            { no: 2, name: "tip", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.episodes = [];
        message.tip = "";
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.app.viewunite.common.ViewEpisode episodes */ 1:
                    message.episodes.push(ViewEpisode.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string tip */ 2:
                    message.tip = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.app.viewunite.common.ViewEpisode episodes = 1; */
        for (let i = 0; i < message.episodes.length; i++)
            ViewEpisode.internalBinaryWrite(message.episodes[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string tip = 2; */
        if (message.tip !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.tip);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.viewunite.pgcanymodel.Reserve
 */
export const Reserve = new Reserve$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Rights$Type extends MessageType {
    constructor() {
        super("bilibili.app.viewunite.pgcanymodel.Rights", [
            { no: 1, name: "allow_download", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "allow_review", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "can_watch", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "is_cover_show", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "copyright", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "copyright_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "allow_bp", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 8, name: "area_limit", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 9, name: "is_preview", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 10, name: "ban_area_show", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 11, name: "watch_platform", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 12, name: "allow_bp_rank", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 13, name: "resource", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 14, name: "forbid_pre", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 15, name: "only_vip_download", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 16, name: "new_allow_download", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.allowDownload = 0;
        message.allowReview = 0;
        message.canWatch = 0;
        message.isCoverShow = 0;
        message.copyright = "";
        message.copyrightName = "";
        message.allowBp = 0;
        message.areaLimit = 0;
        message.isPreview = 0;
        message.banAreaShow = 0;
        message.watchPlatform = 0;
        message.allowBpRank = 0;
        message.resource = "";
        message.forbidPre = 0;
        message.onlyVipDownload = 0;
        message.newAllowDownload = 0;
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 allow_download */ 1:
                    message.allowDownload = reader.int32();
                    break;
                case /* int32 allow_review */ 2:
                    message.allowReview = reader.int32();
                    break;
                case /* int32 can_watch */ 3:
                    message.canWatch = reader.int32();
                    break;
                case /* int32 is_cover_show */ 4:
                    message.isCoverShow = reader.int32();
                    break;
                case /* string copyright */ 5:
                    message.copyright = reader.string();
                    break;
                case /* string copyright_name */ 6:
                    message.copyrightName = reader.string();
                    break;
                case /* int32 allow_bp */ 7:
                    message.allowBp = reader.int32();
                    break;
                case /* int32 area_limit */ 8:
                    message.areaLimit = reader.int32();
                    break;
                case /* int32 is_preview */ 9:
                    message.isPreview = reader.int32();
                    break;
                case /* int32 ban_area_show */ 10:
                    message.banAreaShow = reader.int32();
                    break;
                case /* int32 watch_platform */ 11:
                    message.watchPlatform = reader.int32();
                    break;
                case /* int32 allow_bp_rank */ 12:
                    message.allowBpRank = reader.int32();
                    break;
                case /* string resource */ 13:
                    message.resource = reader.string();
                    break;
                case /* int32 forbid_pre */ 14:
                    message.forbidPre = reader.int32();
                    break;
                case /* int32 only_vip_download */ 15:
                    message.onlyVipDownload = reader.int32();
                    break;
                case /* int32 new_allow_download */ 16:
                    message.newAllowDownload = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 allow_download = 1; */
        if (message.allowDownload !== 0)
            writer.tag(1, WireType.Varint).int32(message.allowDownload);
        /* int32 allow_review = 2; */
        if (message.allowReview !== 0)
            writer.tag(2, WireType.Varint).int32(message.allowReview);
        /* int32 can_watch = 3; */
        if (message.canWatch !== 0)
            writer.tag(3, WireType.Varint).int32(message.canWatch);
        /* int32 is_cover_show = 4; */
        if (message.isCoverShow !== 0)
            writer.tag(4, WireType.Varint).int32(message.isCoverShow);
        /* string copyright = 5; */
        if (message.copyright !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.copyright);
        /* string copyright_name = 6; */
        if (message.copyrightName !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.copyrightName);
        /* int32 allow_bp = 7; */
        if (message.allowBp !== 0)
            writer.tag(7, WireType.Varint).int32(message.allowBp);
        /* int32 area_limit = 8; */
        if (message.areaLimit !== 0)
            writer.tag(8, WireType.Varint).int32(message.areaLimit);
        /* int32 is_preview = 9; */
        if (message.isPreview !== 0)
            writer.tag(9, WireType.Varint).int32(message.isPreview);
        /* int32 ban_area_show = 10; */
        if (message.banAreaShow !== 0)
            writer.tag(10, WireType.Varint).int32(message.banAreaShow);
        /* int32 watch_platform = 11; */
        if (message.watchPlatform !== 0)
            writer.tag(11, WireType.Varint).int32(message.watchPlatform);
        /* int32 allow_bp_rank = 12; */
        if (message.allowBpRank !== 0)
            writer.tag(12, WireType.Varint).int32(message.allowBpRank);
        /* string resource = 13; */
        if (message.resource !== "")
            writer.tag(13, WireType.LengthDelimited).string(message.resource);
        /* int32 forbid_pre = 14; */
        if (message.forbidPre !== 0)
            writer.tag(14, WireType.Varint).int32(message.forbidPre);
        /* int32 only_vip_download = 15; */
        if (message.onlyVipDownload !== 0)
            writer.tag(15, WireType.Varint).int32(message.onlyVipDownload);
        /* int32 new_allow_download = 16; */
        if (message.newAllowDownload !== 0)
            writer.tag(16, WireType.Varint).int32(message.newAllowDownload);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.viewunite.pgcanymodel.Rights
 */
export const Rights = new Rights$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Stat$Type extends MessageType {
    constructor() {
        super("bilibili.app.viewunite.pgcanymodel.Stat", [
            { no: 1, name: "followers", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "play_data", kind: "message", T: () => StatInfo }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.followers = "";
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string followers */ 1:
                    message.followers = reader.string();
                    break;
                case /* bilibili.app.viewunite.common.StatInfo play_data */ 2:
                    message.playData = StatInfo.internalBinaryRead(reader, reader.uint32(), options, message.playData);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string followers = 1; */
        if (message.followers !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.followers);
        /* bilibili.app.viewunite.common.StatInfo play_data = 2; */
        if (message.playData)
            StatInfo.internalBinaryWrite(message.playData, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.viewunite.pgcanymodel.Stat
 */
export const Stat = new Stat$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UserStatus$Type extends MessageType {
    constructor() {
        super("bilibili.app.viewunite.pgcanymodel.UserStatus", [
            { no: 1, name: "show", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "follow", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "follow_status", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "pay", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "sponsor", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "vip", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 7, name: "vip_frozen", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 8, name: "watch_progress", kind: "message", T: () => WatchProgress }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.show = 0;
        message.follow = 0;
        message.followStatus = 0;
        message.pay = 0;
        message.sponsor = 0;
        message.vip = 0;
        message.vipFrozen = 0;
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 show */ 1:
                    message.show = reader.int32();
                    break;
                case /* int32 follow */ 2:
                    message.follow = reader.int32();
                    break;
                case /* int32 follow_status */ 3:
                    message.followStatus = reader.int32();
                    break;
                case /* int32 pay */ 4:
                    message.pay = reader.int32();
                    break;
                case /* int32 sponsor */ 5:
                    message.sponsor = reader.int32();
                    break;
                case /* int32 vip */ 6:
                    message.vip = reader.int32();
                    break;
                case /* int32 vip_frozen */ 7:
                    message.vipFrozen = reader.int32();
                    break;
                case /* bilibili.app.viewunite.pgcanymodel.WatchProgress watch_progress */ 8:
                    message.watchProgress = WatchProgress.internalBinaryRead(reader, reader.uint32(), options, message.watchProgress);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 show = 1; */
        if (message.show !== 0)
            writer.tag(1, WireType.Varint).int32(message.show);
        /* int32 follow = 2; */
        if (message.follow !== 0)
            writer.tag(2, WireType.Varint).int32(message.follow);
        /* int32 follow_status = 3; */
        if (message.followStatus !== 0)
            writer.tag(3, WireType.Varint).int32(message.followStatus);
        /* int32 pay = 4; */
        if (message.pay !== 0)
            writer.tag(4, WireType.Varint).int32(message.pay);
        /* int32 sponsor = 5; */
        if (message.sponsor !== 0)
            writer.tag(5, WireType.Varint).int32(message.sponsor);
        /* int32 vip = 6; */
        if (message.vip !== 0)
            writer.tag(6, WireType.Varint).int32(message.vip);
        /* int32 vip_frozen = 7; */
        if (message.vipFrozen !== 0)
            writer.tag(7, WireType.Varint).int32(message.vipFrozen);
        /* bilibili.app.viewunite.pgcanymodel.WatchProgress watch_progress = 8; */
        if (message.watchProgress)
            WatchProgress.internalBinaryWrite(message.watchProgress, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.viewunite.pgcanymodel.UserStatus
 */
export const UserStatus = new UserStatus$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ViewPgcAny$Type extends MessageType {
    constructor() {
        super("bilibili.app.viewunite.pgcanymodel.ViewPgcAny", [
            { no: 1, name: "ogv_data", kind: "message", T: () => OgvData }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.viewunite.pgcanymodel.OgvData ogv_data */ 1:
                    message.ogvData = OgvData.internalBinaryRead(reader, reader.uint32(), options, message.ogvData);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.viewunite.pgcanymodel.OgvData ogv_data = 1; */
        if (message.ogvData)
            OgvData.internalBinaryWrite(message.ogvData, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.viewunite.pgcanymodel.ViewPgcAny
 */
export const ViewPgcAny = new ViewPgcAny$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WatchProgress$Type extends MessageType {
    constructor() {
        super("bilibili.app.viewunite.pgcanymodel.WatchProgress", [
            { no: 1, name: "last_ep_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 2, name: "last_ep_index", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "last_time", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.lastEpId = 0;
        message.lastEpIndex = "";
        message.lastTime = 0;
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 last_ep_id */ 1:
                    message.lastEpId = reader.int64().toNumber();
                    break;
                case /* string last_ep_index */ 2:
                    message.lastEpIndex = reader.string();
                    break;
                case /* int64 last_time */ 3:
                    message.lastTime = reader.int64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 last_ep_id = 1; */
        if (message.lastEpId !== 0)
            writer.tag(1, WireType.Varint).int64(message.lastEpId);
        /* string last_ep_index = 2; */
        if (message.lastEpIndex !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.lastEpIndex);
        /* int64 last_time = 3; */
        if (message.lastTime !== 0)
            writer.tag(3, WireType.Varint).int64(message.lastTime);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.viewunite.pgcanymodel.WatchProgress
 */
export const WatchProgress = new WatchProgress$Type();
