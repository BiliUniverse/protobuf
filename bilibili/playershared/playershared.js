// @generated by protobuf-ts 2.9.4 with parameter generate_dependencies,force_optimize_code_size,long_type_number,output_javascript
// @generated from protobuf file "bilibili/playershared/playershared.proto" (package "bilibili.playershared", syntax proto3)
// tslint:disable
// @generated by protobuf-ts 2.9.4 with parameter generate_dependencies,force_optimize_code_size,long_type_number,output_javascript
// @generated from protobuf file "bilibili/playershared/playershared.proto" (package "bilibili.playershared", syntax proto3)
// tslint:disable
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf enum bilibili.playershared.Scheme.ActionType
 */
export var Scheme_ActionType;
(function (Scheme_ActionType) {
    /**
     * @generated from protobuf enum value: UNKNOWN = 0;
     */
    Scheme_ActionType[Scheme_ActionType["UNKNOWN"] = 0] = "UNKNOWN";
    /**
     * @generated from protobuf enum value: SHOW_TOAST = 1;
     */
    Scheme_ActionType[Scheme_ActionType["SHOW_TOAST"] = 1] = "SHOW_TOAST";
})(Scheme_ActionType || (Scheme_ActionType = {}));
/**
 * 杜比类型
 *
 * @generated from protobuf enum bilibili.playershared.DolbyItem.Type
 */
export var DolbyItem_Type;
(function (DolbyItem_Type) {
    /**
     * NONE
     *
     * @generated from protobuf enum value: NONE = 0;
     */
    DolbyItem_Type[DolbyItem_Type["NONE"] = 0] = "NONE";
    /**
     * 普通杜比音效
     *
     * @generated from protobuf enum value: COMMON = 1;
     */
    DolbyItem_Type[DolbyItem_Type["COMMON"] = 1] = "COMMON";
    /**
     * 全景杜比音效
     *
     * @generated from protobuf enum value: ATMOS = 2;
     */
    DolbyItem_Type[DolbyItem_Type["ATMOS"] = 2] = "ATMOS";
})(DolbyItem_Type || (DolbyItem_Type = {}));
/**
 * 视频编码
 *
 * @generated from protobuf enum bilibili.playershared.CodeType
 */
export var CodeType;
(function (CodeType) {
    /**
     * 不指定
     *
     * @generated from protobuf enum value: NOCODE = 0;
     */
    CodeType[CodeType["NOCODE"] = 0] = "NOCODE";
    /**
     * H264
     *
     * @generated from protobuf enum value: CODE264 = 1;
     */
    CodeType[CodeType["CODE264"] = 1] = "CODE264";
    /**
     * H265
     *
     * @generated from protobuf enum value: CODE265 = 2;
     */
    CodeType[CodeType["CODE265"] = 2] = "CODE265";
    /**
     * AV1
     *
     * @generated from protobuf enum value: CODEAV1 = 3;
     */
    CodeType[CodeType["CODEAV1"] = 3] = "CODEAV1";
})(CodeType || (CodeType = {}));
/**
 * 功能类型
 *
 * @generated from protobuf enum bilibili.playershared.ConfType
 */
export var ConfType;
(function (ConfType) {
    /**
     * @generated from protobuf enum value: NoType = 0;
     */
    ConfType[ConfType["NoType"] = 0] = "NoType";
    /**
     * @generated from protobuf enum value: FLIPCONF = 1;
     */
    ConfType[ConfType["FLIPCONF"] = 1] = "FLIPCONF";
    /**
     * @generated from protobuf enum value: CASTCONF = 2;
     */
    ConfType[ConfType["CASTCONF"] = 2] = "CASTCONF";
    /**
     * @generated from protobuf enum value: FEEDBACK = 3;
     */
    ConfType[ConfType["FEEDBACK"] = 3] = "FEEDBACK";
    /**
     * @generated from protobuf enum value: SUBTITLE = 4;
     */
    ConfType[ConfType["SUBTITLE"] = 4] = "SUBTITLE";
    /**
     * @generated from protobuf enum value: PLAYBACKRATE = 5;
     */
    ConfType[ConfType["PLAYBACKRATE"] = 5] = "PLAYBACKRATE";
    /**
     * @generated from protobuf enum value: TIMEUP = 6;
     */
    ConfType[ConfType["TIMEUP"] = 6] = "TIMEUP";
    /**
     * @generated from protobuf enum value: PLAYBACKMODE = 7;
     */
    ConfType[ConfType["PLAYBACKMODE"] = 7] = "PLAYBACKMODE";
    /**
     * @generated from protobuf enum value: SCALEMODE = 8;
     */
    ConfType[ConfType["SCALEMODE"] = 8] = "SCALEMODE";
    /**
     * @generated from protobuf enum value: BACKGROUNDPLAY = 9;
     */
    ConfType[ConfType["BACKGROUNDPLAY"] = 9] = "BACKGROUNDPLAY";
    /**
     * @generated from protobuf enum value: LIKE = 10;
     */
    ConfType[ConfType["LIKE"] = 10] = "LIKE";
    /**
     * @generated from protobuf enum value: DISLIKE = 11;
     */
    ConfType[ConfType["DISLIKE"] = 11] = "DISLIKE";
    /**
     * @generated from protobuf enum value: COIN = 12;
     */
    ConfType[ConfType["COIN"] = 12] = "COIN";
    /**
     * @generated from protobuf enum value: ELEC = 13;
     */
    ConfType[ConfType["ELEC"] = 13] = "ELEC";
    /**
     * @generated from protobuf enum value: SHARE = 14;
     */
    ConfType[ConfType["SHARE"] = 14] = "SHARE";
    /**
     * @generated from protobuf enum value: SCREENSHOT = 15;
     */
    ConfType[ConfType["SCREENSHOT"] = 15] = "SCREENSHOT";
    /**
     * @generated from protobuf enum value: LOCKSCREEN = 16;
     */
    ConfType[ConfType["LOCKSCREEN"] = 16] = "LOCKSCREEN";
    /**
     * @generated from protobuf enum value: RECOMMEND = 17;
     */
    ConfType[ConfType["RECOMMEND"] = 17] = "RECOMMEND";
    /**
     * @generated from protobuf enum value: PLAYBACKSPEED = 18;
     */
    ConfType[ConfType["PLAYBACKSPEED"] = 18] = "PLAYBACKSPEED";
    /**
     * @generated from protobuf enum value: DEFINITION = 19;
     */
    ConfType[ConfType["DEFINITION"] = 19] = "DEFINITION";
    /**
     * @generated from protobuf enum value: SELECTIONS = 20;
     */
    ConfType[ConfType["SELECTIONS"] = 20] = "SELECTIONS";
    /**
     * @generated from protobuf enum value: NEXT = 21;
     */
    ConfType[ConfType["NEXT"] = 21] = "NEXT";
    /**
     * @generated from protobuf enum value: EDITDM = 22;
     */
    ConfType[ConfType["EDITDM"] = 22] = "EDITDM";
    /**
     * @generated from protobuf enum value: SMALLWINDOW = 23;
     */
    ConfType[ConfType["SMALLWINDOW"] = 23] = "SMALLWINDOW";
    /**
     * @generated from protobuf enum value: SHAKE = 24;
     */
    ConfType[ConfType["SHAKE"] = 24] = "SHAKE";
    /**
     * @generated from protobuf enum value: OUTERDM = 25;
     */
    ConfType[ConfType["OUTERDM"] = 25] = "OUTERDM";
    /**
     * @generated from protobuf enum value: INNERDM = 26;
     */
    ConfType[ConfType["INNERDM"] = 26] = "INNERDM";
    /**
     * @generated from protobuf enum value: PANORAMA = 27;
     */
    ConfType[ConfType["PANORAMA"] = 27] = "PANORAMA";
    /**
     * @generated from protobuf enum value: DOLBY = 28;
     */
    ConfType[ConfType["DOLBY"] = 28] = "DOLBY";
    /**
     * @generated from protobuf enum value: COLORFILTER = 29;
     */
    ConfType[ConfType["COLORFILTER"] = 29] = "COLORFILTER";
    /**
     * @generated from protobuf enum value: LOSSLESS = 30;
     */
    ConfType[ConfType["LOSSLESS"] = 30] = "LOSSLESS";
    /**
     * @generated from protobuf enum value: FREYAENTER = 31;
     */
    ConfType[ConfType["FREYAENTER"] = 31] = "FREYAENTER";
    /**
     * @generated from protobuf enum value: FREYAFULLENTER = 32;
     */
    ConfType[ConfType["FREYAFULLENTER"] = 32] = "FREYAFULLENTER";
    /**
     * @generated from protobuf enum value: SKIPOPED = 33;
     */
    ConfType[ConfType["SKIPOPED"] = 33] = "SKIPOPED";
    /**
     * @generated from protobuf enum value: RECORDSCREEN = 34;
     */
    ConfType[ConfType["RECORDSCREEN"] = 34] = "RECORDSCREEN";
    /**
     * @generated from protobuf enum value: DUBBING = 35;
     */
    ConfType[ConfType["DUBBING"] = 35] = "DUBBING";
    /**
     * @generated from protobuf enum value: LISTEN = 36;
     */
    ConfType[ConfType["LISTEN"] = 36] = "LISTEN";
})(ConfType || (ConfType = {}));
/**
 * DRM类型
 *
 * @generated from protobuf enum bilibili.playershared.DrmTechType
 */
export var DrmTechType;
(function (DrmTechType) {
    /**
     *
     *
     * @generated from protobuf enum value: UNKNOWN_DRM = 0;
     */
    DrmTechType[DrmTechType["UNKNOWN_DRM"] = 0] = "UNKNOWN_DRM";
    /**
     *
     *
     * @generated from protobuf enum value: FAIR_PLAY = 1;
     */
    DrmTechType[DrmTechType["FAIR_PLAY"] = 1] = "FAIR_PLAY";
    /**
     *
     *
     * @generated from protobuf enum value: WIDE_VINE = 2;
     */
    DrmTechType[DrmTechType["WIDE_VINE"] = 2] = "WIDE_VINE";
    /**
     * 哔哩哔哩自研DRM
     *
     * @generated from protobuf enum value: BILI_DRM = 3;
     */
    DrmTechType[DrmTechType["BILI_DRM"] = 3] = "BILI_DRM";
})(DrmTechType || (DrmTechType = {}));
/**
 * 错误码
 *
 * @generated from protobuf enum bilibili.playershared.PlayErr
 */
export var PlayErr;
(function (PlayErr) {
    /**
     * @generated from protobuf enum value: NoErr = 0;
     */
    PlayErr[PlayErr["NoErr"] = 0] = "NoErr";
    /**
     * 管控类型的错误码
     *
     * @generated from protobuf enum value: WithMultiDeviceLoginErr = 1;
     */
    PlayErr[PlayErr["WithMultiDeviceLoginErr"] = 1] = "WithMultiDeviceLoginErr";
})(PlayErr || (PlayErr = {}));
/**
 *
 *
 * @generated from protobuf enum bilibili.playershared.UnsupportScene
 */
export var UnsupportScene;
(function (UnsupportScene) {
    /**
     *
     *
     * @generated from protobuf enum value: UNKNOWN_SCENE = 0;
     */
    UnsupportScene[UnsupportScene["UNKNOWN_SCENE"] = 0] = "UNKNOWN_SCENE";
    /**
     *
     *
     * @generated from protobuf enum value: PREMIERE = 1;
     */
    UnsupportScene[UnsupportScene["PREMIERE"] = 1] = "PREMIERE";
})(UnsupportScene || (UnsupportScene = {}));
/**
 * 视频类型
 *
 * @generated from protobuf enum bilibili.playershared.VideoType
 */
export var VideoType;
(function (VideoType) {
    /**
     * @generated from protobuf enum value: UNKNOWN = 0;
     */
    VideoType[VideoType["UNKNOWN"] = 0] = "UNKNOWN";
    /**
     * 用户生成内容
     *
     * @generated from protobuf enum value: UGC = 1;
     */
    VideoType[VideoType["UGC"] = 1] = "UGC";
    /**
     * 专业生产内容
     *
     * @generated from protobuf enum value: PGC = 2;
     */
    VideoType[VideoType["PGC"] = 2] = "PGC";
})(VideoType || (VideoType = {}));
// @generated message type with reflection information, may provide speed optimized methods
class ArcConf$Type extends MessageType {
    constructor() {
        super("bilibili.playershared.ArcConf", [
            { no: 1, name: "is_support", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "disable", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "extra_content", kind: "message", T: () => ExtraContent },
            { no: 4, name: "unsupport_scene", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message bilibili.playershared.ArcConf
 */
export const ArcConf = new ArcConf$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Button$Type extends MessageType {
    constructor() {
        super("bilibili.playershared.Button", [
            { no: 1, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "link", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "report_params", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "scalar", T: 9 /*ScalarType.STRING*/ } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message bilibili.playershared.Button
 */
export const Button = new Button$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ConfValue$Type extends MessageType {
    constructor() {
        super("bilibili.playershared.ConfValue", [
            { no: 1, name: "switch_val", kind: "scalar", oneof: "value", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "selected_val", kind: "scalar", oneof: "value", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message bilibili.playershared.ConfValue
 */
export const ConfValue = new ConfValue$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeviceConf$Type extends MessageType {
    constructor() {
        super("bilibili.playershared.DeviceConf", [
            { no: 1, name: "conf_value", kind: "message", T: () => ConfValue }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message bilibili.playershared.DeviceConf
 */
export const DeviceConf = new DeviceConf$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ExtraContent$Type extends MessageType {
    constructor() {
        super("bilibili.playershared.ExtraContent", [
            { no: 1, name: "disable_reason", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "disable_code", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message bilibili.playershared.ExtraContent
 */
export const ExtraContent = new ExtraContent$Type();
// @generated message type with reflection information, may provide speed optimized methods
class History$Type extends MessageType {
    constructor() {
        super("bilibili.playershared.History", [
            { no: 1, name: "current_video", kind: "message", T: () => HistoryInfo },
            { no: 2, name: "related_video", kind: "message", T: () => HistoryInfo }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message bilibili.playershared.History
 */
export const History = new History$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HistoryInfo$Type extends MessageType {
    constructor() {
        super("bilibili.playershared.HistoryInfo", [
            { no: 1, name: "progress", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 2, name: "last_play_cid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message bilibili.playershared.HistoryInfo
 */
export const HistoryInfo = new HistoryInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PlayDeviceConf$Type extends MessageType {
    constructor() {
        super("bilibili.playershared.PlayDeviceConf", [
            { no: 1, name: "arc_confs", kind: "map", K: 5 /*ScalarType.INT32*/, V: { kind: "message", T: () => DeviceConf } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message bilibili.playershared.PlayDeviceConf
 */
export const PlayDeviceConf = new PlayDeviceConf$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Scheme$Type extends MessageType {
    constructor() {
        super("bilibili.playershared.Scheme", [
            { no: 1, name: "action_type", kind: "enum", T: () => ["bilibili.playershared.Scheme.ActionType", Scheme_ActionType] },
            { no: 2, name: "toast", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message bilibili.playershared.Scheme
 */
export const Scheme = new Scheme$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Stream$Type extends MessageType {
    constructor() {
        super("bilibili.playershared.Stream", [
            { no: 1, name: "stream_info", kind: "message", T: () => StreamInfo },
            { no: 2, name: "dash_video", kind: "message", oneof: "content", T: () => DashVideo },
            { no: 3, name: "segment_video", kind: "message", oneof: "content", T: () => SegmentVideo }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message bilibili.playershared.Stream
 */
export const Stream = new Stream$Type();
// @generated message type with reflection information, may provide speed optimized methods
class StreamInfo$Type extends MessageType {
    constructor() {
        super("bilibili.playershared.StreamInfo", [
            { no: 1, name: "quality", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "format", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "description", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "err_code", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "limit", kind: "message", T: () => StreamLimit },
            { no: 6, name: "need_vip", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 7, name: "need_login", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 8, name: "intact", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 9, name: "no_rexcode", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 10, name: "attribute", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 11, name: "new_description", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "display_desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "superscript", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 14, name: "vip_free", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 15, name: "subtitle", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 16, name: "scheme", kind: "message", T: () => Scheme },
            { no: 17, name: "support_drm", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message bilibili.playershared.StreamInfo
 */
export const StreamInfo = new StreamInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DashItem$Type extends MessageType {
    constructor() {
        super("bilibili.playershared.DashItem", [
            { no: 1, name: "id", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "base_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "backup_url", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "bandwidth", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "codecid", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "md5", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "size", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 8, name: "frame_rate", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "widevine_pssh", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message bilibili.playershared.DashItem
 */
export const DashItem = new DashItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DashVideo$Type extends MessageType {
    constructor() {
        super("bilibili.playershared.DashVideo", [
            { no: 1, name: "base_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "backup_url", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "bandwidth", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "codecid", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "md5", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "size", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 7, name: "audio_id", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "no_rexcode", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 9, name: "frame_rate", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "width", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 11, name: "height", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 12, name: "widevine_pssh", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message bilibili.playershared.DashVideo
 */
export const DashVideo = new DashVideo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SegmentVideo$Type extends MessageType {
    constructor() {
        super("bilibili.playershared.SegmentVideo", [
            { no: 1, name: "segment", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ResponseUrl }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message bilibili.playershared.SegmentVideo
 */
export const SegmentVideo = new SegmentVideo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ResponseUrl$Type extends MessageType {
    constructor() {
        super("bilibili.playershared.ResponseUrl", [
            { no: 1, name: "order", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "length", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 3, name: "size", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 4, name: "url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "backup_url", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "md5", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message bilibili.playershared.ResponseUrl
 */
export const ResponseUrl = new ResponseUrl$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ResponseDash$Type extends MessageType {
    constructor() {
        super("bilibili.playershared.ResponseDash", [
            { no: 1, name: "video", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DashItem },
            { no: 2, name: "audio", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DashItem }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message bilibili.playershared.ResponseDash
 */
export const ResponseDash = new ResponseDash$Type();
// @generated message type with reflection information, may provide speed optimized methods
class StreamLimit$Type extends MessageType {
    constructor() {
        super("bilibili.playershared.StreamLimit", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "msg", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message bilibili.playershared.StreamLimit
 */
export const StreamLimit = new StreamLimit$Type();
// @generated message type with reflection information, may provide speed optimized methods
class VideoVod$Type extends MessageType {
    constructor() {
        super("bilibili.playershared.VideoVod", [
            { no: 1, name: "aid", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "cid", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "qn", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 4, name: "fnver", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "fnval", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "download", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "force_host", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 8, name: "fourk", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 9, name: "prefer_codec_type", kind: "enum", T: () => ["bilibili.playershared.CodeType", CodeType] },
            { no: 10, name: "voice_balance", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message bilibili.playershared.VideoVod
 */
export const VideoVod = new VideoVod$Type();
// @generated message type with reflection information, may provide speed optimized methods
class VodInfo$Type extends MessageType {
    constructor() {
        super("bilibili.playershared.VodInfo", [
            { no: 1, name: "quality", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "format", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "timelength", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 4, name: "video_codecid", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "stream_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Stream },
            { no: 6, name: "dash_audio", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DashItem },
            { no: 7, name: "dolby", kind: "message", T: () => DolbyItem },
            { no: 8, name: "volume", kind: "message", T: () => VolumeInfo },
            { no: 9, name: "loss_less_item", kind: "message", T: () => LossLessItem }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message bilibili.playershared.VodInfo
 */
export const VodInfo = new VodInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DolbyItem$Type extends MessageType {
    constructor() {
        super("bilibili.playershared.DolbyItem", [
            { no: 1, name: "type", kind: "enum", T: () => ["bilibili.playershared.DolbyItem.Type", DolbyItem_Type] },
            { no: 2, name: "audio", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DashItem }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message bilibili.playershared.DolbyItem
 */
export const DolbyItem = new DolbyItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LossLessItem$Type extends MessageType {
    constructor() {
        super("bilibili.playershared.LossLessItem", [
            { no: 1, name: "is_lossless_audio", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "audio", kind: "message", T: () => DashItem },
            { no: 3, name: "need_vip", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message bilibili.playershared.LossLessItem
 */
export const LossLessItem = new LossLessItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class VolumeInfo$Type extends MessageType {
    constructor() {
        super("bilibili.playershared.VolumeInfo", [
            { no: 1, name: "measured_i", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 2, name: "measured_lra", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 3, name: "measured_tp", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 4, name: "measured_threshold", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 5, name: "target_offset", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 6, name: "target_i", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 7, name: "target_tp", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message bilibili.playershared.VolumeInfo
 */
export const VolumeInfo = new VolumeInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PlayArc$Type extends MessageType {
    constructor() {
        super("bilibili.playershared.PlayArc", [
            { no: 1, name: "video_type", kind: "enum", T: () => ["bilibili.playershared.VideoType", VideoType] },
            { no: 2, name: "aid", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 3, name: "cid", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 4, name: "drm_tech_type", kind: "enum", T: () => ["bilibili.playershared.DrmTechType", DrmTechType] }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message bilibili.playershared.PlayArc
 */
export const PlayArc = new PlayArc$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PlayArcConf$Type extends MessageType {
    constructor() {
        super("bilibili.playershared.PlayArcConf", [
            { no: 1, name: "arc_confs", kind: "map", K: 5 /*ScalarType.INT32*/, V: { kind: "message", T: () => ArcConf } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message bilibili.playershared.PlayArcConf
 */
export const PlayArcConf = new PlayArcConf$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QnTrialInfo$Type extends MessageType {
    constructor() {
        super("bilibili.playershared.QnTrialInfo", [
            { no: 1, name: "trial_able", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "remaining_times", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "start", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "time_length", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "start_toast", kind: "message", T: () => Toast },
            { no: 6, name: "end_toast", kind: "message", T: () => Toast },
            { no: 8, name: "quality_open_tip_btn", kind: "message", T: () => Button }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message bilibili.playershared.QnTrialInfo
 */
export const QnTrialInfo = new QnTrialInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Toast$Type extends MessageType {
    constructor() {
        super("bilibili.playershared.Toast", [
            { no: 1, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "button", kind: "message", T: () => Button }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message bilibili.playershared.Toast
 */
export const Toast = new Toast$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Event$Type extends MessageType {
    constructor() {
        super("bilibili.playershared.Event", [
            { no: 1, name: "shake", kind: "message", T: () => Shake }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message bilibili.playershared.Event
 */
export const Event = new Event$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Shake$Type extends MessageType {
    constructor() {
        super("bilibili.playershared.Shake", [
            { no: 1, name: "file", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message bilibili.playershared.Shake
 */
export const Shake = new Shake$Type();
